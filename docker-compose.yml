services:
   nginx:
      image: nginx:stable-alpine
      volumes:
         - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      ports:
         - "4200:80"
      depends_on:
         - frontend
         - backend

   frontend:
      build:
         context: ./frontend
         dockerfile: Dockerfile

   backend:
      build:
         context: ./backend
         dockerfile: Dockerfile
      environment:
         DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
         EMAIL_HOST: ${EMAIL_HOST}
         EMAIL_PORT: ${EMAIL_PORT}
         EMAIL_USER: ${EMAIL_USER}
         EMAIL_PASS: ${EMAIL_PASS}
         EMAIL_FROM: ${EMAIL_FROM}
         PORT: 5000
      ports:
         - "5000:5000"
      env_file:
         - .env
      depends_on:
         db:
            condition: service_healthy

   db:
      image: postgres:16-alpine
      environment:
         POSTGRES_DB: ${POSTGRES_DB}
         POSTGRES_USER: ${POSTGRES_USER}
         POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      healthcheck:
         test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
         interval: 10s
         timeout: 5s
         retries: 5
      volumes:
         - postgres_data:/var/lib/postgresql/data
      ports:
         - "5432:5432"

   pgadmin:
      image: dpage/pgadmin4
      environment:
         PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
         PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      ports:
         - "5050:80"
      depends_on:
         - db
      volumes:
         - pgadmin_data:/var/lib/pgadmin

volumes:
   postgres_data:
   pgadmin_data:
